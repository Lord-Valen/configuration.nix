;; Variables
(deflisten workspaces :initial "[]" "~/.config/eww/scripts/get-workspaces.nu")
(deflisten currentWorkspaces :initial "[]" "~/.config/eww/scripts/get-active-workspaces.nu")
(defpoll time :interval "5m" "~/.config/eww/scripts/time.nu")

;; Widgets
(defwidget barLeft []
  (box :class "module"
       :orientation "h"
       :halign "start"
       :spacing "3"
       :space-evenly true
       (for workspace in workspaces
            (eventbox
             ;; This can use ?. operator in the next release
             :class { currentWorkspaces[0] != "null"
                      ? currentWorkspaces[1] != "null"
                        ? "workspace${workspace.name == currentWorkspaces[0].name || workspace.name == currentWorkspaces[1].name ? "-current" : ""}${workspace.windows > 0 ? "-occupied" : ""}"
                          : "workspace${workspace.name == currentWorkspaces[0].name ? "-current" : ""}${workspace.windows>0 ? "-occupied" : ""}"
                            : "workspace${workspace.windows > 0 ? "-occupied" : ""}"}
             :onclick "hyprctl dispatch workspace ${workspace.name}"
             (label :text "${workspace.name}")))))

(defwidget barCenter []
  (box :class "module"
       :orientation "h"
       :halign "center"
       :spacing "3"
       :space-evenly false
       (label :text "${time["hour"]}")
       (label :text ":")
       (label :text "${time["minute"]}")))

(defwidget barRight []
  (box :class "module"
       :orientation "h"
       :halign "end"
       :space-evenly false
       "bar"
       "right"))

;; Windows
(defwindow bar
  :monitor 1
  :geometry (geometry
             :x "0"
             :y "5px"
             :height "30px"
             :width "99%"
             :anchor "top center")
  ;; X11
  :stacking "fg"
  :wm-ignore false
  :reserve (struts :distance "40px" :side "top")
  ;; Wayland
  :windowtype "dock"
  :exclusive true
  ;; Content
  (box :class "bar"
       :orientation "h"
       (barLeft)
       (barCenter)
       (barRight)))
