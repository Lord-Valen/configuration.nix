;; 
;; Variables
(deflisten workspaces :initial '[{"name": "sys", "id": 0, "windows": 0, "current": true}]' "~/.config/eww/scripts/get-workspaces.nu")
(defpoll time :initial '{"year": "1970", "month": "01", "day": "01", "hour": "00", "minute": "00", "timezone": "00:00"}' :interval "1m" "~/.config/eww/scripts/time.nu")

;; Widgets
(defwidget cpu []
  (circular-progress :class "cpu"
                     :value {EWW_CPU.avg}
                     :thickness 2
                     (label :class "cpu-icon"
                            :text "")))

(defwidget battery []
  (literal
   :content { EWW_BATTERY != ""
              ? '(circular-progress :class "battery"
                                    :value {EWW_BATTERY.total_avg}
                                    :thickness 2
                                    :tooltip "Battery at ${EWW_BATTERY.total_avg}%"
                                    (label :class "battery-icon"
                                           ;; This can use ?. and || when <=0.5.0
                                           :text { EWW_BATTERY.BAT0 != ""
                                                   ? EWW_BATTERY.BAT0.status == "Charging"
                                                     ? "󱟦"
                                                     : EWW_BATTERY.BAT0.status == "Discharging"
                                                       ? "󱟤"
                                                       : "󱟢"
                                                   : EWW_BATTERY.BAT1 != ""
                                                     ? EWW_BATTERY.BAT1.status == "Charging"
                                                       ? "󱟦"
                                                       : EWW_BATTERY.BAT1.status == "Discharging"
                                                         ? "󱟤"
                                                         : "󱟢"
                                                     : "󱟨"}))'
              : ""}))

;; Modules
(defwidget barLeft []
  (box :class "module"
       :orientation "h"
       :halign "start"
       :spacing "3"
       :space-evenly true
       (for workspace in workspaces
            (eventbox :class
                      {workspace.current
                                 ? workspace.windows > 0
                                   ? "workspace-current-occupied"
                                   : "workspace-current"
                                 : workspace.windows > 0
                                   ? "workspace-occupied"
                                   : "workspace"}
             :onclick "hyprctl dispatch workspace ${workspace.id}"
             (label :text "${workspace.name}")))))

(defwidget barCenter []
  (box :class "module"
       :orientation "h"
       :halign "center"
       :spacing "3"
       :space-evenly false
       (label :text "${time.hour}")
       (label :text ":")
       (label :text "${time.minute}")))

(defwidget barRight []
  (box :class "module"
       :orientation "h"
       :halign "end"
       :spacing "6"
       :space-evenly false
       (cpu)
       (battery)))

;; Windows
(defwindow bar
  ;; TODO: Complain about multihead
  :monitor 0
  :geometry (geometry
             :x "0"
             :y "5px"
             :height "30px"
             :width "99%"
             :anchor "top center")
  ;; Wayland
  :windowtype "dock"
  :exclusive true
  ;; Content
  (centerbox :class "bar"
             :orientation "h"
             (barLeft)
             (barCenter)
             (barRight)))
